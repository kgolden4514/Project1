#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as_tibble(sapply(results, toupper))
get_stock_df <- results[-c(9:12)]
results <- get_stock_df %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as_tibble(sapply(results, toupper))
get_stock_df <- results[-c(9:12)]
results <- get_stock_df %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock("dis")
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
get_stock_df <- results[-c(9:12)]
results <- get_stock_df %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
get_stock_df <- results[-c(9:12)]
results <- get_stock_df %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock("dis")
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
get_stock_df <- results[-c(9:12)]
results <- get_stock_df %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
dis <- get_stock("dis")
View(dis)
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
my_data <- GET(url, query = query_list)
parsed <- fromJSON(rawToChar(my_data$content))
get_stock_df <- parsed$results
View(get_stock_df)
my_data <- GET ('https://api.polygon.io/v3/reference/tickers?active=true&apiKey=_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT')
parsed <- fromJSON(rawToChar(my_data$content))
options <- parsed$results
View(options)
my_data <- GET ('https://api.polygon.io/v3/reference/tickers?ticker.gte=a&active=true&apiKey=_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT')
parsed <- fromJSON(rawToChar(my_data$content))
options <- parsed$results
my_data <- GET ('https://api.polygon.io/v3/reference/tickers?ticker.gte=A&active=true&apiKey=_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT')
parsed <- fromJSON(rawToChar(my_data$content))
options <- parsed$results
API_KEY <- "_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT"  # Replace with your actual API key
getStockData <- function(ticker = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query <- list(active = "true", apiKey = API_KEY)
if (ticker != "all") {
query$ticker <- ticker
}
my_data <- GET(url, query = query)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <- results %>%
filter(ticker == ticker)
}
return(results)
} else {
stop("Error retrieving data from the API.")
}
}
# Example usage
all_stocks <- getStockData()  # Get all stocks
disney_stock <- getStockData("dis")  # Get Disney's stock
API_KEY <- "_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT"  # Replace with your actual API key
getStockData <- function(ticker = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query <- list(active = "false", apiKey = API_KEY)
if (ticker != "all") {
query$ticker <- ticker
}
my_data <- GET(url, query = query)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <- results %>%
filter(ticker == ticker)
}
return(results)
} else {
stop("Error retrieving data from the API.")
}
}
# Example usage
all_stocks <- getStockData()  # Get all stocks
disney_stock <- getStockData("dis")  # Get Disney's stock
View(all_stocks)
#Get the open, high, low, and close (OHLC) for the entire stocks/equities markets for January 9, 2023.
get_OHLC <- function(query = "all") {
url <- "https://api.polygon.io/v2/aggs/grouped/locale/us/market/stocks/2023-01-09"
query_list <- list(adjusted = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
results <- results[-c(8)]
results <- get_OHLC_df %>%
rename(Ticker = T,
Trading_Volume = v,
Volume_Weighted_AvgPrice = vw,
Open_Price_01.09.2023 = o,
Close_Price_01.09.2023 = c,
Highest_Price_01.09.2023 = h,
Lowest_Price_01.09.2023 = l,
Num_Transactions_01.09.2023 = n)
results <- results %>%
filter(Ticker == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_OHLC_df <- get_OHLC()
get_OHLC_df <- get_OHLC()
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(tidyverse)
API_KEY <- Sys.setenv("API_KEY" =
"_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT")
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
results <- results[-c(9:12)]
results <- results %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock_df <- get_stock()
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
results <- results[-c(9:12)]
results <- results %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock_df <- get_stock("dis")
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
results <- results[-c(9:12)]
results <- results %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock_df <- get_stock("dis")
View(get_stock_df)
get_stock_df <- get_stock()
API_KEY <- "_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT"  # Replace with your actual API key
getStockData <- function(ticker = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query <- list(active = "true", apiKey = API_KEY)
if (ticker != "all") {
query$ticker <- ticker
}
my_data <- GET(url, query = query)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <- results %>%
filter(ticker == ticker)
}
return(results)
} else {
stop("Error retrieving data from the API.")
}
}
# Example usage
all_stocks <- getStockData()  # Get all stocks
disney_stock <- getStockData("dis")  # Get Disney's stock
View(all_stocks)
library(httr)
library(jsonlite)
library(tidyverse)
API_KEY <- Sys.setenv("API_KEY" =
"_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT")
#Ticker data that can be filtered.
get_stock <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
results <- results[-c(9:12)]
results <- results %>%
filter(ticker == toupper(query) |
name == toupper(query) |
market == toupper(query) |
locale == toupper(query) |
primary_exchange == toupper(query) |
type == toupper(query) |
active == toupper(query) |
currency_name == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_stock_df <- get_stock()
API_KEY <- "_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT"  # Replace with your actual API key # Replace with your actual API key
getStockData <- function(query = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query_list <- list(active = "true", apiKey = API_KEY)
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <- results %>%
filter(ticker == toupper(query) | name == query)
}
return(results)
} else {
stop("Error retrieving data from the API.")
}
}
# Example usage
all_stocks <- getStockData() # Get all stocks
disney_stock <- getStockData("aapl") # Get Disney's stock
agilent_stock <- getStockData("A") # Get Agilent Technologies Inc. stock
View(disney_stock)
API_KEY <- "_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT"  # Replace with your actual API key # Replace with your actual API key
getStockData <- function(ticker = "all") {
url <- "https://api.polygon.io/v3/reference/tickers"
query <- list(active = "true", apiKey = API_KEY)
if (ticker != "all") {
query$ticker <- ticker
}
my_data <- GET(url, query = query)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <<- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <- results %>%
filter(ticker == ticker)
}
return(results)
} else {
stop("Error retrieving data from the API.")
}
}
#Get the open, high, low, and close (OHLC) for the entire stocks/equities markets for January 9, 2023.
get_OHLC <- function(query = "all") {
url <- "https://api.polygon.io/v2/aggs/grouped/locale/us/market/stocks/2023-01-09"
query_list <- list(adjusted = "true", apiKey =
Sys.getenv("API_KEY"))
if (query != "all") {
query_list$q <- query
}
my_data <- GET(url, query = query_list)
if (http_status(my_data)$category == "Success") {
parsed <- fromJSON(rawToChar(my_data$content))
results <- as.data.frame(parsed$results)
if (nrow(results) > 0) {
results <-as.data.frame(sapply(results, toupper))
get_OHLC_df <- results[-c(8)]
results <- get_OHLC_df %>%
rename(Ticker = T,
Trading_Volume = v,
Volume_Weighted_AvgPrice = vw,
Open_Price_01.09.2023 = o,
Close_Price_01.09.2023 = c,
Highest_Price_01.09.2023 = h,
Lowest_Price_01.09.2023 = l,
Num_Transactions_01.09.2023 = n)
results <- results %>%
filter(Ticker == toupper(query))
}
return(results)
}
else {
stop("Error retrieving data from the API.")
}
}
get_OHLC()
get_OHLC <- get_OHLC()
View(get_OHLC)
my_data <- GET ('https://api.polygon.io/v2/aggs/grouped/locale/us/market/stocks/2023-01-09&apiKey=_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT')
parsed <- fromJSON(rawToChar(my_data$content))
options <- parsed$results
my_data <- GET ('https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2023-01-09/2023-01-09?adjusted=true&sort=asc&limit=120&apiKey=_aL5f5EmEje0vL6kYr1xOPtgR8e9rGwT')
parsed <- fromJSON(rawToChar(my_data$content))
options <- parsed$results
View(options)
View(options)
